Plan:-
-------
Company(Organization) MicroService
Employee MicroService
MySql DB ( JPA )
Lombok
Exception Handling
Multiple relations between Organization and Employee
String to Json (or) Json to String Conversion
Rest Template
loggers
AspectJ Logging (Centralized Logging)
Profiles
Junit Test cases
Jacoco Report
Sonar Lint


Core Java:-
-----------
Streams (Sort and Filter)
Java 8 features
Collections

------------------------------------------------------------------------------------------------------------------------------------------
Git Commands:-
--------------
git checkout -b US4108333-SMAHTML
git push -u origin US4108333-SMAHTML
-------------------------------------
git clone {repourl} -b {branchName}  or git clone {branchName}
git pull origin dev
git pull
git push
git checkout {branchName}
----------------------------
git stash
git pull
git stash pop
git reset --hard
----------------------------
Fork Repository:-
-----------------
git clone {forkRepository}
git remote -v
git remote add upstream {actualRepository} 
git pull upstream dev
--------------------------------------------
git cherry-pick 890efb6f8c8ef5bc65d20893885c75eee10a3bd0
git cherry-pick {commit-id}
----------------------------------------------------------------------------------------------------------------------------------------
Test Cases:-
-------------
when(enrollmentRepository.findByConfirmationIDAndDeleted(Mockito.anyString(), Mockito.anyBoolean())).thenReturn(enrollment); (or)
doReturn(e).when(enrollmentRepository).findByConfirmationIDAndDeleted(e.getConfirmationID(), false);   --> Method Returns
when(feinProviderService.getFEIN(Mockito.anyString())).thenThrow(NotFoundException.class);             --> Method Returns and throws Exception
doNothing().when(enrollmentUnitService).restoreRelatedEUsFromArchive(Mockito.anyString());			   --> Void Method
doThrow(new SystemException()).when(enrollmentHTMLManager).generateSubmissionHTMLOnSMASubmit(Mockito.any());  --> Void Method and throws Exception
EX:- For Throw Exception in test case
@Test(expected = NotFoundException.class)  --> declare on top of test method
when(enrollmentRepository.findByConfirmationIDAndDeleted(Mockito.anyString(), Mockito.anyBoolean())).thenReturn(null);
---------------------------------------------------------------------------------------------------------------------------------------


Spring Boot Application Workflow
https://www.geeksforgeeks.org/spring-boot-architecture/
How we can look/evaluate when we get a spring boot project at first time
How to deploy project in live environment – Deployment concept 
How to achieve Abstraction in a Java Program
Spring MVC workflow 
Spring Boot Architect flow.
Sort employee objects based on salary
What are microservice
Mvn clean command
In test case we pass the variable or not?
Which method we call if other microservice is down
Bean life cycle in spring boot
MVC architecture in details with exaple
Explain @Entity annotation & @qualifier annotation
Encapsulation:- https://www.geeksforgeeks.org/encapsulation-in-java/
Bean Lifecycle in Spring:- https://www.geeksforgeeks.org/bean-life-cycle-in-java-spring
When 1 Microservice is down:- https://stackoverflow.com/questions/50562495/how-to-handle-microservice-interaction-when-one-of-the-microservice-is-down
https://www.interviewbit.com/microservices-interview-questions/
Streams:- https://www.geeksforgeeks.org/functional-programming-in-java-8-using-the-stream-api-with-example/
Adding json file for junit test cases coverage.




Spring Boot Tutorial:
---------------------
https://www.educba.com/spring-boot-ehcache/?source=leftnav


Programs:-
-----------
Write the code to sort collection Using Stream API on the basis of student address.
class student{
id
name
address
}
https://stackabuse.com/java-8-how-to-sort-list-with-stream-sorted/

write a program which will print a list using Lamda.
https://stackoverflow.com/questions/23324782/how-to-use-javas-lambda-expressions-to-print-an-array

Write a programe which will print a list object and while printing append Hello as prefix using Lamda



Zookeeper:-       ".\bin\windows\zookeeper-server-start.bat .\config\zookeeper.properties"
kafka server:-    ".\bin\windows\kafka-server-start.bat .\config\server.properties"
create topics:-   ".\bin\windows\kafka-topics.bat --create --zookeeper localhost:2181 
					--replication-factor 1 --partitions 1 --topic Topic1"
List All topics:- ".\bin\windows\kafka-topics.bat --list --zookeeper localhost:2181"
Add Messages:-    ".\bin\windows\kafka-console-producer.bat --broker-list localhost:9092 --topic Topic1"
View Messages:-   ".\bin\windows\kafka-console-consumer.bat --bootstrap-server localhost:9092 --topic Topic1 
					--from-beginning"

https://www.edureka.co/blog/kafka-streams/#kafkastream


Features of Kafka:-
-------------------
Large data per second
Elastic
high throughput
Fault-Tolerance

Disadvantages of kafka
----------------------
Redundant data
Performance issue
storage issue
Number of partitions


https://dev.to/jakmar17/deploy-spring-boot-on-wildfly-application-server-2029
https://www.callicoder.com/spring-boot-spring-security-jwt-mysql-react-app-part-1/
Hashcode and Equals Method:- https://howtodoinjava.com/java/basics/java-hashcode-equals-methods/
MAP Object filter based on value:- https://mkyong.com/java8/java-8-filter-a-map-examples/
How to enable or disable spring bean based on condition:- https://reflectoring.io/spring-boot-conditionals/
How to make our bean synchronized:- http://dolszewski.com/spring/spring-bean-thread-safety-guide/
Annotations in JUnit Test Cases:- https://www.baeldung.com/junit-before-beforeclass-beforeeach-beforeall
Order of test cases execution:- https://www.baeldung.com/junit-5-test-order
Jackson @JsonIgnore, @JsonIgnoreProperties and @JsonIgnoreType:- https://www.javaguides.net/2019/04/jackson-jsonignore-jsonignoreproperties-and-jsonignoretype.html
Spring Scopes:- https://howtodoinjava.com/spring-core/spring-bean-scopes/
or https://medium.com/@miguelangelperezdiaz444/understanding-bean-scopes-in-spring-which-one-is-best-for-your-application-3ff404e44b76
Spring Boot | REST API Request Validation & Exception Handling Realtime Example:- https://github.com/Java-Techie-jt/validation-exception-handling
Sort Map in Java using Streams:- https://codingwithharish.com/posts/how-to-sort-map-in-java/



Program to write 234678 to reverse integer number

Spring vs Spring boot Differences

Micro service design principles

SOLID design patterns

1. Program to find count of second highest word in given text.
2. Program to find if given number is prime or not?
3. Explain the flow to retrieve bank balance using spring boot framework.
4. What are different response codes in micro service.
5. How to derive context path url in spring boot project.

Core java questions
OOPS – Runtime Polymorphism and how can we implement,
Collections – Added features in java 8, How to traverse through collection
How to filter objects using stream
Can we have a duplicate static method in both Super class and sub class? What will be the outcome if so? 
Microservices
List of design patterns
Any hands on with microservice implementation
Communication types in between services
How can we achieve failsafe services and what pattern can be implemented.
Spring Boot
How does Spring actuators work
Custom Spring Exception handling mechanism
Any exposure - Spring AWS Cloud Maven API
Any idea on Profile testing with Eureka server
data structure based coding questions like snakes and ladder

